{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Javastyle Unity log": {
		"prefix": "syso",
		"body": "Debug.Log($1);"
	},

	"DS Unity log": {
		"prefix": "DL",
		"body": "UnityEngine.Debug.Log($1);"
	},

	"Javastyle Unity log Error": {
		"prefix": "syse",
		"body": "Debug.LogError($1);"
    },
    
    "DS Unity log Error": {
		"prefix": "DE",
		"body": "UnityEngine.Debug.LogError($1);"
	},

	"Unity OnDestroy":
	{
		"prefix": "OnDe",
		"body":
		[
			"void OnDestroy() {",
			"\t$1",
			"}"
		]
	},

	"Unity OnApplicationQuit":
	{
		"prefix": "OnA",
		"body":
		[
			"void OnApplicationQuit() {",
			"\t$1",
			"}"
		]
	},

	"Throw Invalid":
	{
		"prefix": "throw Invalid",
		"body": "throw new System.InvalidOperationException($1);$0",
		"description": "Throw in any incomprehensible situation =)"
	},

	"Getter":
	{
		"prefix": "gettercs",
		"body":
		[
			"public $1 {",
			"\tget {",
			"\t\t return $2;",
			"\t}",
			"}"
		]
	},
	"Test snipet":
	{
		"prefix": "tst",
		"body": "UnityEngine.Debug.LogError(${TM_SELECTED_TEXT});"
	},

	"Override":
	{
		"prefix": "over",
		"body": [
			"${1|public,protected|} override $2($3) {",
			"\tbase.$2($3);$0",
			"}"
		]
	},

	"For int":
	{
		"prefix": "fori",
		"body": [
			"for (int i = 0; i < $1; i++) {",
			"\t$2",
			"}"
		]
	},

	"For each":
	{
		"prefix": "fore",
		"body": [
			"foreach (${1:var} ${2:element} in ${3:collection}) {",
			"\t$0",
			"}"
		]
	},

	"NotImplemented":
	{
		"prefix": "thrUnImp",
		"body": "throw new System.NotImplementedException();"
	},
}